// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using uppgift1;

#nullable disable

namespace uppgift1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231213095529_CoursesUpdateDateToString")]
    partial class CoursesUpdateDateToString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("uppgift1.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "C#",
                            EndDate = "2022-06-15",
                            StartDate = "2020-09-01",
                            Title = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Java",
                            EndDate = "2022-06-15",
                            StartDate = "2020-09-01",
                            Title = "Java"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Python",
                            EndDate = "2022-06-15",
                            StartDate = "2020-09-01",
                            Title = "Python"
                        },
                        new
                        {
                            Id = 4,
                            Description = "C++",
                            EndDate = "2022-06-15",
                            StartDate = "2020-09-01",
                            Title = "C++"
                        },
                        new
                        {
                            Id = 5,
                            Description = "C",
                            EndDate = "2022-06-15",
                            StartDate = "2020-09-01",
                            Title = "C"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
